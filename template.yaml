--- 
apiVersion: backstage.io/v1beta2
kind: Template
metadata: 
  description: "Create a Golang repo with this template built by members of the Go community"
  name: golang-starter
  tags: 
    - experimental
    - go
  title: "Golang Microservice"
spec: 
  owner: web@example.com
  parameters: 
    properties: 
      component_id: 
        description: "Unique name of the component"
        title: Name
        type: string
      docker_build_image: 
        default: golang
        description: "The docker base image to use when building the service"
        title: "Docker Build Image"
        type: string
      docker_build_image_version: 
        default: alpine
        description: "The image version to use when building the service"
        enum: 
          - alpine
        title: "Docker Build Image Version"
        type: string
      docker_image: 
        default: "alpine-base-image:latest"
        description: "The docker base image to use when running the service"
        title: "Docker Image"
        type: string
      project_short_description: 
        description: "Description of the component"
        title: Description
        type: string
      use_ci: 
        default: github
        description: "Add a CI config to the repo, Gitub Actions, Circle or Travis are the only supported right now"
        enum: 
          - github
          - travis
          - circle
          - none
        title: "Add CI"
        type: string
      use_cobra_cmd: 
        default: "y"
        enum: 
          - "y"
          - "n"
        title: "Enable Cobra CLI Tools (https://github.com/spf13/cobra)"
        type: string
      use_logrus_logging: 
        default: "y"
        enum: 
          - "y"
          - "n"
        title: "Enable Logrus Logging (https://github.com/sirupsen/logrus)"
        type: string
      use_viper_config: 
        default: "y"
        enum: 
          - "y"
          - "n"
        title: "Enable Viper Config (https://github.com/spf13/viper)"
        type: string
    required: 
      - component_id
      - project_short_description
      - docker_image
      - docker_build_image
      - docker_build_image_version
      - use_logrus_logging
      - use_viper_config
      - use_ci
      - use_cobra_cmd
  steps:
    - id: publish # a unique id for the step, can be anything you like
      name: Publish # a user friendly name for the step, this is what is shown in the frontend
      action: publish:github # the action ID that has been registered with the scaffolder-backend
      input: # parameters that are passed as input to the action handler function
        allowedHosts: ['github.com']
        description: 'This is {{ parameters.name }}' # handlebars templating is supported with the values from the parameters section in the same file.
        repoUrl: '{{ parameters.repoUrl }}      
  path: "."
  templater: cookiecutter
  type: service
